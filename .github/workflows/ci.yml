name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run tests
      run: |
        cd backend
        npm test
      env:
        NODE_ENV: test

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run tests
      run: |
        cd frontend
        npm test
      env:
        NODE_ENV: test

  build:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Build Backend
      run: |
        cd backend
        npm ci
        npm run build

    - name: Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build

    - name: Upload Backend Build
      uses: actions/upload-artifact@v3
      with:
        name: backend-build
        path: ./backend/dist

    - name: Upload Frontend Build
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: ./frontend/build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
    - name: Download Backend Build
      uses: actions/download-artifact@v3
      with:
        name: backend-build
        path: ./backend/dist

    - name: Download Frontend Build
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: ./frontend/build

    # Ajoutez ici les étapes de déploiement spécifiques à votre environnement
    # Par exemple, déploiement sur Vercel, Heroku, AWS, etc.
    - name: Deploy Backend
      run: |
        echo "Add your backend deployment steps here"
        # Exemple pour Heroku:
        # heroku container:push web -a your-app-name
        # heroku container:release web -a your-app-name

    - name: Deploy Frontend
      run: |
        echo "Add your frontend deployment steps here"
        # Exemple pour Vercel:
        # npx vercel --prod 
